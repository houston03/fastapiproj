"""Initial migration

Revision ID: f2cfe8aae5c7
Revises: 
Create Date: 2024-12-14 17:38:30.454205

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f2cfe8aae5c7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('articles',
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('summary_1', sa.Text(), nullable=True),
    sa.Column('summary_2', sa.Text(), nullable=True),
    sa.Column('publication_date', sa.DateTime(timezone=True), server_default='NOW()', nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('tsv_content', postgresql.TSVECTOR(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('article_id')
    )
    op.create_index(op.f('ix_articles_article_id'), 'articles', ['article_id'], unique=False)
    # ### end Alembic commands ###
    # Создание триггера для обновления tsv_content
    op.execute("""
           CREATE TRIGGER tsvectorupdate BEFORE INSERT OR UPDATE
           ON articles FOR EACH ROW EXECUTE FUNCTION
           tsvector_update_trigger(
               tsv_content, 'pg_catalog.english', title, summary_1, summary_2, category
           );
       """)

    # Создание индекса GIN для tsv_content
    op.create_index('ix_articles_tsv_content', 'articles', ['tsv_content'], postgresql_using='gin')

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_articles_article_id'), table_name='articles')
    op.drop_table('articles')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
    # Удаление индекса GIN
    op.drop_index('ix_articles_tsv_content', table_name='articles')

    # Удаление триггера
    op.execute("DROP TRIGGER IF EXISTS tsvectorupdate ON articles;")

    # Удаление столбца tsv_content
    op.drop_column('articles', 'tsv_content')